version: "2.1"

services:
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./all-stack/zoo1/data:/data
      - ./all-stack/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    ports:
      - "9092:9092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
    volumes:
      - ./all-stack/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1

  redis:
    image: redis
    command: redis-server --requirepass mypassword
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - ./all-stack/redis/data:/data

  mongo:
    image: mongo
    hostname: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: secret
    volumes:
      - ./all-stack/mongo/data:/data/db

  fastdfs:
    image: annoak/fastdfs:latest
    container_name: fastdfs
    environment:
      - TZ=Asia/Shanghai
      - NGINX_PORT=8888
      - FDFS_PORT=22122
      # - HOST_IP=192.168.198.107
      # - NET_VAR=eth0
    volumes:
      - ./all-stack/fastdfs:/var/local/fdfs
    ports:
      - "8888:8888"
      - "22122:22122"
    # 把root权限带进去
    # privileged: true
    # network_mode: "host"
    # restart: always

  nginx:
    image: nginx
    volumes:
      - ./all-stack/nginx/templates:/etc/nginx/templates
      - ./all-stack/nginx/html:/usr/share/nginx/html
    ports:
      - "8080:80"
    environment:
      - NGINX_PORT=80
